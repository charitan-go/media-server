// Code generated by ent, DO NOT EDIT.

package media

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/charitan-go/media-server/ent/predicate"
	"github.com/charitan-go/media-server/internal/media/dto"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldID, id))
}

// ReadableID applies equality check predicate on the "readable_id" field. It's identical to ReadableIDEQ.
func ReadableID(v uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldReadableID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDescription, v))
}

// Goal applies equality check predicate on the "goal" field. It's identical to GoalEQ.
func Goal(v float64) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldGoal, v))
}

// StartDate applies equality check predicate on the "start_date" field. It's identical to StartDateEQ.
func StartDate(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldStartDate, v))
}

// EndDate applies equality check predicate on the "end_date" field. It's identical to EndDateEQ.
func EndDate(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldEndDate, v))
}

// CountryCode applies equality check predicate on the "countryCode" field. It's identical to CountryCodeEQ.
func CountryCode(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldCountryCode, v))
}

// OwnerCharityReadableID applies equality check predicate on the "owner_charity_readable_id" field. It's identical to OwnerCharityReadableIDEQ.
func OwnerCharityReadableID(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOwnerCharityReadableID, v))
}

// ReadableIDEQ applies the EQ predicate on the "readable_id" field.
func ReadableIDEQ(v uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldReadableID, v))
}

// ReadableIDNEQ applies the NEQ predicate on the "readable_id" field.
func ReadableIDNEQ(v uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldReadableID, v))
}

// ReadableIDIn applies the In predicate on the "readable_id" field.
func ReadableIDIn(vs ...uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldReadableID, vs...))
}

// ReadableIDNotIn applies the NotIn predicate on the "readable_id" field.
func ReadableIDNotIn(vs ...uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldReadableID, vs...))
}

// ReadableIDGT applies the GT predicate on the "readable_id" field.
func ReadableIDGT(v uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldReadableID, v))
}

// ReadableIDGTE applies the GTE predicate on the "readable_id" field.
func ReadableIDGTE(v uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldReadableID, v))
}

// ReadableIDLT applies the LT predicate on the "readable_id" field.
func ReadableIDLT(v uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldReadableID, v))
}

// ReadableIDLTE applies the LTE predicate on the "readable_id" field.
func ReadableIDLTE(v uuid.UUID) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldReadableID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldDescription, v))
}

// GoalEQ applies the EQ predicate on the "goal" field.
func GoalEQ(v float64) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldGoal, v))
}

// GoalNEQ applies the NEQ predicate on the "goal" field.
func GoalNEQ(v float64) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldGoal, v))
}

// GoalIn applies the In predicate on the "goal" field.
func GoalIn(vs ...float64) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldGoal, vs...))
}

// GoalNotIn applies the NotIn predicate on the "goal" field.
func GoalNotIn(vs ...float64) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldGoal, vs...))
}

// GoalGT applies the GT predicate on the "goal" field.
func GoalGT(v float64) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldGoal, v))
}

// GoalGTE applies the GTE predicate on the "goal" field.
func GoalGTE(v float64) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldGoal, v))
}

// GoalLT applies the LT predicate on the "goal" field.
func GoalLT(v float64) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldGoal, v))
}

// GoalLTE applies the LTE predicate on the "goal" field.
func GoalLTE(v float64) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldGoal, v))
}

// StartDateEQ applies the EQ predicate on the "start_date" field.
func StartDateEQ(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldStartDate, v))
}

// StartDateNEQ applies the NEQ predicate on the "start_date" field.
func StartDateNEQ(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldStartDate, v))
}

// StartDateIn applies the In predicate on the "start_date" field.
func StartDateIn(vs ...time.Time) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldStartDate, vs...))
}

// StartDateNotIn applies the NotIn predicate on the "start_date" field.
func StartDateNotIn(vs ...time.Time) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldStartDate, vs...))
}

// StartDateGT applies the GT predicate on the "start_date" field.
func StartDateGT(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldStartDate, v))
}

// StartDateGTE applies the GTE predicate on the "start_date" field.
func StartDateGTE(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldStartDate, v))
}

// StartDateLT applies the LT predicate on the "start_date" field.
func StartDateLT(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldStartDate, v))
}

// StartDateLTE applies the LTE predicate on the "start_date" field.
func StartDateLTE(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldStartDate, v))
}

// EndDateEQ applies the EQ predicate on the "end_date" field.
func EndDateEQ(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldEndDate, v))
}

// EndDateNEQ applies the NEQ predicate on the "end_date" field.
func EndDateNEQ(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldEndDate, v))
}

// EndDateIn applies the In predicate on the "end_date" field.
func EndDateIn(vs ...time.Time) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldEndDate, vs...))
}

// EndDateNotIn applies the NotIn predicate on the "end_date" field.
func EndDateNotIn(vs ...time.Time) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldEndDate, vs...))
}

// EndDateGT applies the GT predicate on the "end_date" field.
func EndDateGT(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldEndDate, v))
}

// EndDateGTE applies the GTE predicate on the "end_date" field.
func EndDateGTE(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldEndDate, v))
}

// EndDateLT applies the LT predicate on the "end_date" field.
func EndDateLT(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldEndDate, v))
}

// EndDateLTE applies the LTE predicate on the "end_date" field.
func EndDateLTE(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldEndDate, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v dto.CategoryEnum) predicate.Media {
	vc := v
	return predicate.Media(sql.FieldEQ(FieldCategory, vc))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v dto.CategoryEnum) predicate.Media {
	vc := v
	return predicate.Media(sql.FieldNEQ(FieldCategory, vc))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...dto.CategoryEnum) predicate.Media {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Media(sql.FieldIn(FieldCategory, v...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...dto.CategoryEnum) predicate.Media {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Media(sql.FieldNotIn(FieldCategory, v...))
}

// CountryCodeEQ applies the EQ predicate on the "countryCode" field.
func CountryCodeEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldCountryCode, v))
}

// CountryCodeNEQ applies the NEQ predicate on the "countryCode" field.
func CountryCodeNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldCountryCode, v))
}

// CountryCodeIn applies the In predicate on the "countryCode" field.
func CountryCodeIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldCountryCode, vs...))
}

// CountryCodeNotIn applies the NotIn predicate on the "countryCode" field.
func CountryCodeNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldCountryCode, vs...))
}

// CountryCodeGT applies the GT predicate on the "countryCode" field.
func CountryCodeGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldCountryCode, v))
}

// CountryCodeGTE applies the GTE predicate on the "countryCode" field.
func CountryCodeGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldCountryCode, v))
}

// CountryCodeLT applies the LT predicate on the "countryCode" field.
func CountryCodeLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldCountryCode, v))
}

// CountryCodeLTE applies the LTE predicate on the "countryCode" field.
func CountryCodeLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldCountryCode, v))
}

// CountryCodeContains applies the Contains predicate on the "countryCode" field.
func CountryCodeContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldCountryCode, v))
}

// CountryCodeHasPrefix applies the HasPrefix predicate on the "countryCode" field.
func CountryCodeHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldCountryCode, v))
}

// CountryCodeHasSuffix applies the HasSuffix predicate on the "countryCode" field.
func CountryCodeHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldCountryCode, v))
}

// CountryCodeEqualFold applies the EqualFold predicate on the "countryCode" field.
func CountryCodeEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldCountryCode, v))
}

// CountryCodeContainsFold applies the ContainsFold predicate on the "countryCode" field.
func CountryCodeContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldCountryCode, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v dto.StatusEnum) predicate.Media {
	vc := v
	return predicate.Media(sql.FieldEQ(FieldStatus, vc))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v dto.StatusEnum) predicate.Media {
	vc := v
	return predicate.Media(sql.FieldNEQ(FieldStatus, vc))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...dto.StatusEnum) predicate.Media {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Media(sql.FieldIn(FieldStatus, v...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...dto.StatusEnum) predicate.Media {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Media(sql.FieldNotIn(FieldStatus, v...))
}

// OwnerCharityReadableIDEQ applies the EQ predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDNEQ applies the NEQ predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDIn applies the In predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldOwnerCharityReadableID, vs...))
}

// OwnerCharityReadableIDNotIn applies the NotIn predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldOwnerCharityReadableID, vs...))
}

// OwnerCharityReadableIDGT applies the GT predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDGTE applies the GTE predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDLT applies the LT predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDLTE applies the LTE predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDContains applies the Contains predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDHasPrefix applies the HasPrefix predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDHasSuffix applies the HasSuffix predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDEqualFold applies the EqualFold predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldOwnerCharityReadableID, v))
}

// OwnerCharityReadableIDContainsFold applies the ContainsFold predicate on the "owner_charity_readable_id" field.
func OwnerCharityReadableIDContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldOwnerCharityReadableID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Media) predicate.Media {
	return predicate.Media(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Media) predicate.Media {
	return predicate.Media(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Media) predicate.Media {
	return predicate.Media(sql.NotPredicates(p))
}
